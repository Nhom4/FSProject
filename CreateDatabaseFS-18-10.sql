--them bang Adm
--bo 2 bang Stock, StockInventory, them truong iInventory vao bang Product 

/* bi loi khi chuyen iVAT tu bang Purchase qua PurDetails, Orders qua Orðetails 
ma chua sua procedure insert, update*/

----Tao CSDL

use master
go
drop database FS
go
create database FS
go
use FS

----Tao bang
create table Product
(
	cProID char(6) primary key not null,
	vProName varchar(50) not null,
	vProDetails varchar(500) not null,
	cVenID char(6) not null,
	cCatID char(6) not null,
	iInventory int default 0
)

create table Category
(
	cCatID char(6) primary key not null,
	vCatName varchar(50) not null
)

create table Vendor
(
	cVenID char(6) primary key not null,
	vVenName varchar(50) not null,
	vVenAddress varchar(100) not null,
	cVenPhone char(15) not null,
	cVenFax char(15) not null,
	cVenEmail char(50) not null
)

create table Employee
(
	cEmpID char(6) primary key not null,
	vEmpName varchar(50) not null,
	vEmpAddress varchar(100) not null,
	cEmpPhone char(15) not null,
	cEmpEmail char(50) not null,
	cEmpPassword char(50) not null
)

create table Adm
(
	cAdmID int identity primary key  not null,
	vAdmName varchar(50) not null,
	vAdmAddress varchar(100) not null,
	cAdmPhone char(15) not null,
	cAdmEmail char(50) not null,
	cAdmPassword char(50) not null
)

create table Customer
(
	cCusID char(6) primary key not null,
	vCusName varchar(50) not null,
	cCusSex char(6) not null,
	vCusAddress varchar(100) not null,
	cCusPhone char(15) not null,
	cCusEmail char(50) not null
)

create table Purchase
(
	cPurID char(6) primary key not null,
	dPurDate datetime not null,
	iPurTotalPrice int not null,
	cStatus char(100) not null,
	cEmpID char(6) not null
)

create table PurDetails
(
	cPurID char(6) not null,
	cProID char(6) not null,
	iPurQuantity int not null,
	iPurPrice int not null,
    iVAT int not null,
	primary key (cPurID, cProID)
)

create table Orders
(
	cOrdID char(6) primary key not null,
	cCusID char(6) not null,
	dOrdDate datetime not null,
	iOrdTotalPrice int not null,
	cStatus char(100) not null,
	cEmpID char(6) not null
)

create table OrdDetails
(
	cOrdID char(6) not null,
	cProID char(6) not null,
	iOrdQuantity int not null,
	iOrdPrice int not null,
	iVAT int not null,
	primary key (cOrdID, cProID)
)

---Tao fk
alter table Purchase
add constraint fk_Purchase_Employee foreign key (cEmpID) references Employee(cEmpID)

alter table Orders
add constraint fk_Orders_Employee foreign key (cEmpID) references Employee(cEmpID),
constraint fk_Orders_Customer foreign key (cCusID) references Customer(cCusID)

alter table PurDetails
add constraint fk_PurDetails_Purchase foreign key (cPurID) references Purchase(cPurID),
constraint fk_PurDetails_Product foreign key (cProID) references Product(cProID)

alter table OrdDetails
add constraint fk_OrdDetails_Orders foreign key (cOrdID) references Orders(cOrdID),
constraint fk_OrdDetails_Product foreign key (cProID) references Product(cProID)

alter table Product
add constraint fk_Product_Vendor foreign key (cVenID) references Vendor(cVenID),
constraint fk_Product_Category foreign key (cCatID) references Category(cCatID)


---ID tu dong tang
go
if exists (select name from sysobjects where name='prcAutoGeneratedID' and type='p')
drop proc prcAutoGeneratedID
go
create proc prcAutoGeneratedID @Table varchar(20), @ID char(6) output
as
begin
	declare @Pre char(2)
	declare @Num char(4)

	if @Table = 'Category'
        begin
            select @Pre = 'CA'
			select @Num = Max(Right(cCatID,4)) from Category
        end

	if @Table = 'Employee'
        begin
            select @Pre = 'EM'
			select @Num = Max(Right(cEmpID,4)) from Employee
        end
        
    if @Table = 'Customer'
        begin
            select @Pre = 'CU'
			select @Num = Max(Right(cCusID,4)) from Customer
        end

	if @Table = 'Orders'
        begin
            select @Pre = 'OR'
			select @Num = Max(Right(cOrdID,4)) from Orders
        end
        
	if @Table ='Product'
        begin
        	select @Pre = 'PR'
			select @Num = Max(Right(cProID,4)) from Product
        end
                
	if @Table ='Purchase'
        begin
        	select @Pre = 'PU'
			select @Num = Max(Right(cPurID,4)) from Purchase
        end
                   
	if @Table ='Vendor'
        begin
        	select @Pre = 'VE'
			select @Num = Max(Right(cVenID,4)) from Vendor
        end
                                     
    if @Num is NULL select @Num = '0000'
	select @ID = @Pre + Left('0000',4-Len(@Num+1)) + Convert(Char(4),@Num+1)
      
end

---Tao proc insert du lieu vao bang
--Category
go
if exists (select name from sysobjects where name='prcInsertCategory' and type='p')
drop proc prcInsertCategory
go
create proc prcInsertCategory
	@vCatName varchar(50)
as
begin
	declare @cCatID char(6)
	exec prcAutoGeneratedID 'Category', @cCatID output
	insert into Category values(@cCatID, @vCatName)
end

--Employee
go
if exists (select name from sysobjects where name='prcInsertEmployee' and type='p')
drop proc prcInsertEmployee 
go
create proc prcInsertEmployee
	@vEmpName varchar(50),
	@vEmpAddress varchar(100),
	@cEmpPhone char(15),
	@cEmpEmail char(50),
	@cEmpPassword char(50)
as
begin
	declare @cEmpID char(6)
	exec prcAutoGeneratedID 'Employee', @cEmpID output
	insert into Employee values(@cEmpID, @vEmpName, @vEmpAddress, @cEmpPhone, @cEmpEmail, @cEmpPassword)
end

--Customer
go
if exists (select name from sysobjects where name='prcInsertCustomer' and type='p')
drop proc prcInsertCustomer
go
create proc prcInsertCustomer
	@vCusName varchar(50),
	@cCusSex char(6),
	@vCusAddress varchar(100),
	@cCusPhone char(15),
	@cCusEmail char(50)
as
begin
	declare @cCusID char(6)
	exec prcAutoGeneratedID 'Customer', @cCusID output
	insert into Customer values(@cCusID, @vCusName,@cCusSex,@vCusAddress,@cCusPhone,@cCusEmail)
end
---OrdDetails
go
if exists (select name from sysobjects where name='prcInsertOrdDetails' and type='p')
drop proc prcInsertOrdDetails
go
create proc prcInsertOrdDetails
	@cOrdID char(6),
	@cProID char(6),
	@iOrdQuantity int,
	@iOrdPrice int,
	@iVAT int
as
begin
	insert into OrdDetails values(@cOrdID, @cProID, @iOrdQuantity, @iOrdPrice, @iVAT)
end

---Orders
go
if exists (select name from sysobjects where name='prcInsertOrders' and type='p')
drop proc prcInsertOrders
go
create proc prcInsertOrders
	@cCusID char(6),
	@dOrdDate datetime,
	@iOrdTotalPrice int,
	@cStatus char(100),
	@cEmpID char(6)
as
begin
	declare @cOrdID char(6)
	exec prcAutoGeneratedID 'Orders', @cOrdID output
	insert into Orders values(@cOrdID, @cCusID, @dOrdDate, @iOrdTotalPrice, @cStatus, @cEmpID)
end

---Product
go
if exists (select name from sysobjects where name='prcInsertProduct' and type='p')
drop proc prcInsertProduct
go
create proc prcInsertProduct
	@vProName varchar(50),
	@vProDetails varchar(500),
	@cVenID char(6),
	@cCatID char(6)
as
begin
	declare @cProID char(6)
	exec prcAutoGeneratedID 'Product', @cProID output
	insert into Product(cProID,vProName,vProDetails,cVenID,cCatID) values(@cProID, @vProName, @vProDetails, @cVenID, @cCatID)
end

---Purchase
go
if exists (select name from sysobjects where name='prcInsertPurchase' and type='p')
drop proc prcInsertPurchase
go
create proc prcInsertPurchase
	@dPurDate datetime,
	@iPurTotalPrice int,
	@cStatus char(100),
	@cEmpID char(6)
as
begin
	declare @cPurID char(6)
	exec prcAutoGeneratedID 'Purchase', @cPurID output
	insert into Purchase values(@cPurID, @dPurDate, @iPurTotalPrice, @cStatus, @cEmpID)
end

---PurDetails
go
if exists (select name from sysobjects where name='prcInsertPurDetails' and type='p')
drop proc prcInsertPurDetails
go
create proc prcInsertPurDetails
	@cPurID char(6),
	@cProID char(6),
	@iPurQuantity int,
	@iPurPrice int,
	@iVAT int
as
begin
	insert into PurDetails values(@cPurID, @cProID, @iPurQuantity, @iPurPrice, @iVAT)
end

---StockInventory
go
create trigger trgProduct_insertPurDetails
on PurDetails
for insert
as
begin
	declare @cProID char(6)
	select @cProID = cProID from inserted
	declare @iPurQuantity int
	select @iPurQuantity = iPurQuantity from inserted
	
	update Product set iInventory = iInventory + @iPurQuantity where cProID = @cProID
end

go
create trigger trgProduct_insertOrdDetails
on OrdDetails
for insert
as
begin
	declare @cProID char(6)
	select @cProID = cProID from inserted
	declare @iOrdQuantity int
	select @iOrdQuantity = iOrdQuantity from inserted
	
	update Product set iInventory = iInventory - @iOrdQuantity where cProID = @cProID
end

go
create trigger trgProduct_deletePurDetails
on PurDetails
for delete
as
begin
	declare @cProID char(6)
	select @cProID = cProID from deleted
	declare @iPurQuantity int
	select @iPurQuantity = iPurQuantity from deleted
	
	update Product set iInventory = iInventory - @iPurQuantity where cProID = @cProID
end

go
create trigger trgProduct_deleteOrdDetails
on OrdDetails
for delete
as
begin
	declare @cProID char(6)
	select @cProID = cProID from deleted
	declare @iOrdQuantity int
	select @iOrdQuantity = iOrdQuantity from deleted
	
	update Product set iInventory = iInventory + @iOrdQuantity where cProID = @cProID
end

go
create trigger trgProduct_updateOrdDetails
on OrdDetails
for update
as
begin
	declare @cProID char(6)
	select @cProID = cProID from deleted
	declare @iOrdQuantityDel int
	select @iOrdQuantityDel = iOrdQuantity from deleted
	declare @iOrdQuantityIns int
	select @iOrdQuantityIns = iOrdQuantity from inserted
	
	update Product set iInventory = (iInventory + @iOrdQuantityDel - @iOrdQuantityIns) where cProID = @cProID
end

go
create trigger trgProduct_updatePurDetails
on PurDetails
for update
as
begin
	declare @cProID char(6)
	select @cProID = cProID from deleted
	declare @iPurQuantityDel int
	select @iPurQuantityDel = iPurQuantity from deleted
	declare @iPurQuantityIns int
	select @iPurQuantityIns = iPurQuantity from inserted
	
	update Product set iInventory = (iInventory - @iPurQuantityDel + @iPurQuantityIns) where cProID = @cProID
end
---Vendor
go
if exists (select name from sysobjects where name='prcInsertVendor' and type='p')
drop proc prcInsertVendor
go
create proc prcInsertVendor
	@vVenName varchar(50),
	@vVenAddress varchar(100),
	@cVenPhone char(15),
	@cVenFax char(15),
	@cVenEmail char(50)
as
begin
	declare @cVenID char(6)
	exec prcAutoGeneratedID 'Vendor', @cVenID output
	insert into Vendor values(@cVenID, @vVenName, @vVenAddress, @cVenPhone, @cVenFax, @cVenEmail)
end


-- Sua du lieu trong bang
--Customer
go
create proc prcUpdateCustomer(@customerID char(10),@customerName varchar(50),@sex char(6),@address varchar(100),@phoneNumber char(15),@email char(100) )
as
begin
	update Customer set vCusName =@customerName,cCusSex = @sex, vCusAddress=@address,cCusPhone=@phoneNumber,cCusEmail=@email
	where cCusID=@customerID
end
--Employee 
go
create proc prcUpdateEmployee (@cEmpID char(6),
	@vEmpName varchar(50),
	@vEmpAddress varchar(100),
	@cEmpPhone char(15),
	@cEmpEmail char(50),
	@cEmpPassword char(50))
as
begin
	update Employee set vEmpName = @vEmpName, 
	vEmpAddress=@vEmpAddress,
	cEmpPhone=@cEmpPhone,
	cEmpEmail=@cEmpEmail,
	cEmpPassword=@cEmpPassword
	where cEmpID=@cEmpID
end
--Admin
go
create proc prcUpdateAdm (@cAdmID char(6),
	@vAdmName varchar(50),
	@vAdmAddress varchar(100),
	@cAdmPhone char(15),
	@cAdmEmail char(50),
	@cAdmPassword char(50))
as
begin
	update Adm set vAdmName = @vAdmName, 
	vAdmAddress=@vAdmAddress,
	cAdmPhone=@cAdmPhone,
	cAdmEmail=@cAdmEmail,
	cAdmPassword=@cAdmPassword
	where cAdmID=@cAdmID
end
--Category
go
create proc prcUpdateCategory (@cCatID char(6),
	@vCatName varchar(50))
as
begin
	update Category set vCatName=@vCatName
	where cCatID=@cCatID
end
--OrdDetails
go
create proc prcUpdateOrdDetails (@cOrdID char(6),
	@cProID char(6),
	@iOrdQuantity int,
	@iOrdPrice int,
	@iVAT int)
as
begin
	update OrdDetails set cProID =@cProID ,
	iOrdQuantity = @iOrdQuantity, 
	iOrdPrice=@iOrdPrice,
	iVAT=@iVAT
	where cOrdID=@cOrdID
end
--Orders
go
create proc prcUpdateOrders (@cOrdID char(6),
	@dOrdDate datetime,
	@cCusID char(6),
	@iOrdTotalPrice int,
	@cStatus char(100),
	@cEmpID char(6))
as
begin
	update Orders set dOrdDate=@dOrdDate,
	cCusID = @cCusID, 
	iOrdTotalPrice=@iOrdTotalPrice,
	cStatus=@cStatus,
	cEmpID=@cEmpID
	where cOrdID=@cOrdID
end
--Product
go
create proc prcUpdateProduct(@cProID char(6),
	@vProName varchar(50),
	@vProDetails varchar(500),
	@cVenID char(6),
	@cCatID char(6))
as
begin
	update Product set vProName=@vProName,
	vProDetails = @vProDetails, 
	cVenID=@cVenID,
	cCatID=@cCatID
	where cProID=@cProID
end
--Purchase
go
create proc prcUpdatePurchase (@cPurID char(6),
	@dPurDate datetime,
	@iPurTotalPrice int,
	@cStatus char(100),
	@cEmpID char(6))
as
begin
	update Purchase set dPurDate=@dPurDate,
	iPurTotalPrice = @iPurTotalPrice, 
	cStatus=@cStatus,
	cEmpID=@cEmpID
	where cPurID=@cPurID
end
--PurDetails
go
create proc prcUpdatePurDetails (@cPurID char(6),
	@cProID char(6),
	@iPurQuantity int,
	@iPurPrice int,
	@iVAT int)
as
begin
	update PurDetails set cProID=@cProID,
	iPurQuantity = @iPurQuantity, 
	iPurPrice=@iPurPrice,
	iVAT=@iVAT
	where cPurID=@cPurID
end
--Vendor
go
create proc prcUpdateVendor (@cVenID char(6),
	@vVenName varchar(50),
	@vVenAddress varchar(100),
	@cVenPhone char(15),
	@cVenFax char(15),
	@cVenEmail char(50))
as
begin
	update Vendor set vVenName=@vVenName,
	vVenAddress = @vVenAddress, 
	cVenPhone=@cVenPhone,
	cVenFax=@cVenFax,
	cVenEmail=@cVenEmail
	where cVenID=@cVenID
end



---Xoa du lieu
--Category
go
create proc prcDeleteCategory(@cCatID char(6))
as
begin
	Delete Category where cCatID = @cCatID
end
--Customer
go
create proc prcDeleteCustomer(@customerID char(6))
as
begin
	Delete Customer where cCusID = @customerID
end
--Employee
go
create proc prcDeleteEmployee(@cEmpID char(6))
as
begin
	Delete Employee where cEmpID = @cEmpID
end
--Admin
go
create proc prcDeleteAdmin(@cAdmID char(6))
as
begin
	Delete Adm where cAdmID = @cAdmID
end
--OrdDetails
go
create proc prcDeleteOrdDetails(@cOrdID char(6), @cProID char(6))
as
begin
	Delete OrdDetails where (cOrdID = @cOrdID and cProID = @cProID)
end
--Orders
go
create proc prcDeleteOrders(@cOrdID char(6))
as
begin
	Delete Orders where cOrdID = @cOrdID
end
--Product
go
create proc prcDeleteProduct(@cProID char(6))
as
begin
	Delete Product where cProID = @cProID
end
--Purchase
go
create proc prcDeletePurchase(@cPurID char(6))
as
begin
	Delete Purchase where cPurID = @cPurID
end
--PurDetails
go
create proc prcDeletePurDetails(@cPurID char(6), @cProID char(6))
as
begin
	Delete PurDetails where (cPurID = @cPurID and cProID = @cProID)
end
--Vendor
go
create proc prcDeleteVendor(@cVenID char(6))
as
begin
	Delete Vendor where cVenID = @cVenID
end


---Bao cao tinh hinh mua hang trong 1 thang, nhieu thang, 1 nam, nhieu nam
--1 thang
go
if exists (select name from sysobjects where name='prcReportPurchase_1Month' and type='p')
drop proc prcReportPurchase_1Month
go
create proc prcReportPurchase_1Month(@dMonth int)
as
begin
	select pr.cProID, pr.vProName, pd.iPurQuantity, pu.dPurDate
	from Product pr join PurDetails pd on pr.cProID=pd.cProID join Purchase pu on pd.cPurID=pu.cPurID
	where (datepart(mm,pu.dPurDate) = @dMonth) order by pr.cProID
	select pr.cProID, pr.vProName, sum(pd.iPurQuantity) as PurchaseQuantity, sum(pd.iPurPrice) as TotalPrice
	from Product pr join PurDetails pd on pr.cProID=pd.cProID join Purchase pu on pd.cPurID=pu.cPurID
	where (datepart(mm,pu.dPurDate) = @dMonth) group by pr.cProID, pr.vProName
end

--nhieu thang
go
if exists (select name from sysobjects where name='prcReportPurchase_Months' and type='p')
drop proc prcReportPurchase_Months
go
create proc prcReportPurchase_Months(@dMonth1 int, @dMonth2 int)
as
begin
	select pr.cProID, pr.vProName, pd.iPurQuantity, pu.dPurDate
	from Product pr join PurDetails pd on pr.cProID=pd.cProID join Purchase pu on pd.cPurID=pu.cPurID
	where (datepart(mm,pu.dPurDate) between @dMonth1 and @dMonth2) order by pr.cProID
	select pr.cProID, pr.vProName, sum(pd.iPurQuantity) as PurchaseQuantity, sum(pd.iPurPrice) as TotalPrice
	from Product pr join PurDetails pd on pr.cProID=pd.cProID join Purchase pu on pd.cPurID=pu.cPurID
	where (datepart(mm,pu.dPurDate) between @dMonth1 and @dMonth2) group by pr.cProID, pr.vProName
end

--1 nam
go
if exists (select name from sysobjects where name='prcReportPurchase_1Year' and type='p')
drop proc prcReportPurchase_1Year
go
create proc prcReportPurchase_1Year(@dYear int)
as
begin
	select pr.cProID, pr.vProName, pd.iPurQuantity, pu.dPurDate
	from Product pr join PurDetails pd on pr.cProID=pd.cProID join Purchase pu on pd.cPurID=pu.cPurID
	where (datepart(yy,pu.dPurDate) = @dYear) order by pr.cProID
	select pr.cProID, pr.vProName, sum(pd.iPurQuantity) as PurchaseQuantity, sum(pd.iPurPrice) as TotalPrice
	from Product pr join PurDetails pd on pr.cProID=pd.cProID join Purchase pu on pd.cPurID=pu.cPurID
	where (datepart(yy,pu.dPurDate) = @dYear) group by pr.cProID, pr.vProName
end

--nhieu nam
go
if exists (select name from sysobjects where name='prcReportPurchase_Years' and type='p')
drop proc prcReportPurchase_Years
go
create proc prcReportPurchase_Years(@dYear1 int, @dYear2 int)
as
begin
	select pr.cProID, pr.vProName, pd.iPurQuantity, pu.dPurDate
	from Product pr join PurDetails pd on pr.cProID=pd.cProID join Purchase pu on pd.cPurID=pu.cPurID
	where (datepart(yy,pu.dPurDate) between @dYear1 and @dYear2) order by pr.cProID
	select pr.cProID, pr.vProName, sum(pd.iPurQuantity) as PurchaseQuantity, sum(pd.iPurPrice) as TotalPrice
	from Product pr join PurDetails pd on pr.cProID=pd.cProID join Purchase pu on pd.cPurID=pu.cPurID
	where (datepart(yy,pu.dPurDate) between @dYear1 and @dYear2) group by pr.cProID, pr.vProName
end

---Bao cao tinh hinh ban hang trong 1 thang, nhieu thang, 1 nam, nhieu nam
--1 thang
go
if exists (select name from sysobjects where name='prcReportOrders_1Month' and type='p')
drop proc prcReportOrders_1Month
go
create proc prcReportOrders_1Month(@dMonth int)
as
begin
	select pr.cProID, pr.vProName, od.iOrdQuantity, ord.dOrdDate
	from Product pr join OrdDetails od on pr.cProID=od.cProID join Orders ord on od.cOrdID=ord.cOrdID
	where (datepart(mm,ord.dOrdDate) = @dMonth) order by pr.cProID
	select pr.cProID, pr.vProName, sum(od.iOrdQuantity) as OrdersQuantity, sum(od.iOrdPrice) as TotalPrice
	from Product pr join OrdDetails od on pr.cProID=od.cProID join Orders ord on od.cOrdID=ord.cOrdID
	where (datepart(mm,ord.dOrdDate) = @dMonth) group by pr.cProID, pr.vProName
end

--nhieu thang
go
if exists (select name from sysobjects where name='prcReportOrders_Months' and type='p')
drop proc prcReportOrders_Months
go
create proc prcReportOrders_Months(@dMonth1 int, @dMonth2 int)
as
begin
	select pr.cProID, pr.vProName, od.iOrdQuantity, ord.dOrdDate
	from Product pr join OrdDetails od on pr.cProID=od.cProID join Orders ord on od.cOrdID=ord.cOrdID
	where (datepart(mm,ord.dOrdDate) between @dMonth1 and @dMonth2) order by pr.cProID
	select pr.cProID, pr.vProName, sum(od.iOrdQuantity) as OrdersQuantity, sum(od.iOrdPrice) as TotalPrice
	from Product pr join OrdDetails od on pr.cProID=od.cProID join Orders ord on od.cOrdID=ord.cOrdID
	where (datepart(mm,ord.dOrdDate) between @dMonth1 and @dMonth2) group by pr.cProID, pr.vProName
end

--1 nam
go
if exists (select name from sysobjects where name='prcReportOrders_1Year' and type='p')
drop proc prcReportOrders_1Year
go
create proc prcReportOrders_1Year(@dYear int)
as
begin
	select pr.cProID, pr.vProName, od.iOrdQuantity, ord.dOrdDate
	from Product pr join OrdDetails od on pr.cProID=od.cProID join Orders ord on od.cOrdID=ord.cOrdID
	where (datepart(yy,ord.dOrdDate) = @dYear) order by pr.cProID
	select pr.cProID, pr.vProName, sum(od.iOrdQuantity) as OrdersQuantity, sum(od.iOrdPrice) as TotalPrice
	from Product pr join OrdDetails od on pr.cProID=od.cProID join Orders ord on od.cOrdID=ord.cOrdID
	where (datepart(yy,ord.dOrdDate) = @dYear) group by pr.cProID, pr.vProName
end

--nhieu nam
go
if exists (select name from sysobjects where name='prcReportOrders_Years' and type='p')
drop proc prcReportOrders_Years
go
create proc prcReportOrders_Years(@dYear1 int, @dYear2 int)
as
begin
	select pr.cProID, pr.vProName, od.iOrdQuantity, ord.dOrdDate
	from Product pr join OrdDetails od on pr.cProID=od.cProID join Orders ord on od.cOrdID=ord.cOrdID
	where (datepart(yy,ord.dOrdDate) between @dYear1 and @dYear2) order by pr.cProID
	select pr.cProID, pr.vProName, sum(od.iOrdQuantity) as OrdersQuantity, sum(od.iOrdPrice) as TotalPrice
	from Product pr join OrdDetails od on pr.cProID=od.cProID join Orders ord on od.cOrdID=ord.cOrdID
	where (datepart(yy,ord.dOrdDate) between @dYear1 and @dYear2) group by pr.cProID, pr.vProName
end




/*

exec prcInsertCustomer 'hai','HN','3455555555','sdfg@yahoo.com','cv4321'
go
exec prcInsertEmployee 'hai','HN','3455555555','sdfg@rtt.vc','cv4321'
go
exec prcInsertCategory 'Ghe'
go
exec prcInsertVendor 'XH','ghe go','65432','8765432','876543'
go
exec prcInsertProduct 'ghe','hgfd','VE0001','CA0001'
go
exec prcInsertPurchase '2-2-1998','50000','da thanh toan','EM0001'
go
exec prcInsertOrders 'CU0001', '2-2-1998','43','43','EM0001'

--TEST
exec prcReportPurchase_1Month '3'

exec prcReportPurchase_Months '2','7'

*/