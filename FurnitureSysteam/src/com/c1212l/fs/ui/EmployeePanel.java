/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.c1212l.fs.ui;

import com.c1212l.fs.bean.Category;
import com.c1212l.fs.bean.Customer;
import com.c1212l.fs.bean.Employee;
import com.c1212l.fs.bean.Permission;
import com.c1212l.fs.bean.Product;
import com.c1212l.fs.bean.Vendor;
import com.c1212l.fs.bll.CategoryBUS;
import com.c1212l.fs.bll.EmployeeBUS;
import com.c1212l.fs.bll.PermissionBUS;
import com.c1212l.fs.bll.ProductBUS;
import com.c1212l.fs.bll.VendorBUS;
import com.c1212l.fs.util.KeyValue;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Luu Bi
 */
public class EmployeePanel extends javax.swing.JPanel {

    /**
     * Creates new form EmployeePanel
     */
    public EmployeePanel() {
        initComponents();
        reloadData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtEmployeeId = new javax.swing.JTextField();
        txtEmployeeName = new javax.swing.JTextField();
        txtAddress = new javax.swing.JTextField();
        txtPhoneNumber = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblEmployee = new javax.swing.JTable();
        txtPassword = new javax.swing.JPasswordField();
        txtEmail = new javax.swing.JTextField();
        txtSearch = new javax.swing.JTextField();
        cmbSearch = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Employee Manager");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 10, -1, -1));

        jLabel2.setText("Employee ID:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 90, -1, -1));

        jLabel3.setText("Employee Name:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 130, -1, 10));

        jLabel4.setText("Address:");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 170, -1, -1));

        jLabel5.setText("Phone Number:");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 200, -1, -1));

        jLabel6.setText("Email:");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 240, -1, -1));

        jLabel7.setText("Password:");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 270, -1, -1));
        add(txtEmployeeId, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 90, 130, -1));
        add(txtEmployeeName, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 120, 130, -1));
        add(txtAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 160, 130, -1));
        add(txtPhoneNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 190, 130, -1));

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 330, -1, -1));

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 330, -1, 20));

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 330, -1, -1));

        tblEmployee.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblEmployee.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblEmployeeMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblEmployee);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 370, 460, 220));
        add(txtPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 270, 130, -1));
        add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 230, 130, -1));

        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });
        add(txtSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 50, 130, -1));

        cmbSearch.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(cmbSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 50, -1, -1));

        jLabel8.setText("Search:");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 50, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
           try {
            // TODO add your handling code here:
            validateFieldAdd();  
            String employeeName = txtEmployeeName.getText();
            String address = txtAddress.getText();
            String phoneNumber = txtPhoneNumber.getText();
            String email = txtEmail.getText();
            String password = new String(txtPassword.getPassword());
            employeeBUS.addEmployee(employeeName, address, phoneNumber, email, password);
            reloadData();
       } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Error:", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
             try {
            // TODO add your handling code here:
            String employeeID = txtEmployeeId.getText();
            String employeeName = txtEmployeeName.getText();
            String address = txtAddress.getText();
            String phoneNumber = txtPhoneNumber.getText();
            String email = txtEmail.getText();
            String password = new String(txtPassword.getPassword());
            employeeBUS.updateEmployee(employeeID, employeeName, address, phoneNumber, email, password);
            reloadData();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ProductPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(ProductPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
       
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void tblEmployeeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblEmployeeMouseClicked
        // TODO add your handling code here:
        int selectedRow = tblEmployee.getSelectedRow();
        txtEmployeeId.setText(tblEmployee.getValueAt(selectedRow, 0).toString());
        txtEmployeeName.setText(tblEmployee.getValueAt(selectedRow, 1).toString());
        txtAddress.setText(tblEmployee.getValueAt(selectedRow, 2).toString());
        txtPhoneNumber.setText(tblEmployee.getValueAt(selectedRow, 3).toString());
        txtEmail.setText(tblEmployee.getValueAt(selectedRow, 4).toString());
        txtPassword.setText(tblEmployee.getValueAt(selectedRow, 5).toString());
    }//GEN-LAST:event_tblEmployeeMouseClicked

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
             try {
            // TODO add your handling code here:
            String employeeID = txtEmployeeId.getText();
            employeeBUS.deleteEmployee(employeeID);
            reloadData();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ProductPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(ProductPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        // TODO add your handling code here:
              try {
                 if (cmbSearch.getSelectedIndex()==0) {
   
                    loadSearchEmployeeID();
                 }
                 else if(cmbSearch.getSelectedIndex()==1)
                 {
                     loadSearchEmployeeName();
                 }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(VendorPanel.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(VendorPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_txtSearchKeyReleased

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox cmbSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable tblEmployee;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtEmployeeId;
    private javax.swing.JTextField txtEmployeeName;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtPhoneNumber;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
 private EmployeeBUS employeeBUS = new EmployeeBUS();
    DefaultTableModel tblModel;
    ArrayList<Employee> lstEmployee;    

    private void initTable() {
        Vector header = new Vector();
        header.add("Employee ID ");
        header.add("Employee Name");
        header.add("Address ");
        header.add("Phone Number ");
        header.add("Email");
        header.add("Password");
        tblModel = new DefaultTableModel(header, 0);
        tblEmployee.setModel(tblModel);
    }

    private void fillData(ArrayList<Employee> lst) {
        if (lst != null) {
            for (Employee employee : lst) {
                tblModel.addRow(employee.getVector());
            }
        }
    }

    private void reloadData() {
        try {
            initTable();
            initCmbSearch();
            fillData(employeeBUS.getAllEmployee());
            initTextField();
        } catch (Exception ex) {
            Logger.getLogger(EmployeePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    }
     private void initTextField() {
        txtEmployeeId.setText("");
        txtEmployeeName.setText("");
        txtAddress.setText("");
        txtPhoneNumber.setText("");
        txtEmail.setText("");
        txtPassword.setText("");
    }
     private void loadSearchEmployeeName() throws ClassNotFoundException, SQLException {
        String employeeName = "";
        if (!txtSearch.getText().equals("")) {
            if (!employeeName.contains("where")) {
                employeeName += " where vEmpName like '%" + txtSearch.getText() + "%'";
            } else {
                employeeName += " and vEmpName like '%" + txtSearch.getText() + "%'";
            }
        }
        initTable();
        lstEmployee = employeeBUS.searchEmployeeName(employeeName);
        fillData(lstEmployee);
    }
      private void loadSearchEmployeeID() throws ClassNotFoundException, SQLException {
        String employeeID = "";
        if (!txtSearch.getText().equals("")) {
            if (!employeeID.contains("where")) {
                employeeID += " where cEmpID like '%" + txtSearch.getText() + "%'";
            } else {
                employeeID += " and cEmpID like '%" + txtSearch.getText() + "%'";
            }
        }
        initTable();
        lstEmployee = employeeBUS.searchEmployeeID(employeeID);
        fillData(lstEmployee);
      } 
      private void initCmbSearch() {
        cmbSearch.removeAllItems();
//        cmbSearch.addItem(new KeyValue(-1, ""));
        cmbSearch.addItem(new KeyValue(0, "by ID"));
        cmbSearch.addItem(new KeyValue(1, "by Name"));
    }   
       private void validateFieldAdd() throws Exception {
        if (txtEmployeeName.getText().equals("")) {
            throw new Exception("Please enter Employee Name");
        }
          Pattern ptEmplName = Pattern.compile("^([A-Za-z]+[\\s]?)+$");
        Matcher mcEmplName = ptEmplName.matcher(txtEmployeeName.getText());
        if (!mcEmplName.find()) {
            throw new Exception("Employee Name is not valid");
        }
        if (txtAddress.getText().equals("")) {
            throw new Exception("Please enter Employee Address");
        }
        if (txtPhoneNumber.getText().equals("")) {
            throw new Exception("Please enter Phone Number");
        }
        Pattern ptPhoneNumber = Pattern.compile("^[\\d]{10,11}$");
        Matcher mcPhoneNumber = ptPhoneNumber.matcher(txtPhoneNumber.getText());
        if (!mcPhoneNumber.find()) {
            throw new Exception(" Phone number is not valid");
        }
   
        if (txtEmail.getText().equals("")) {
            throw new Exception("Please enter Email");
        }
        Pattern ptemail = Pattern.compile("^[\\w.-]+@[\\w.-]+\\.[A-Za-z]{2,4}$");
        Matcher mcemail = ptemail.matcher(txtEmail.getText());
        if (!mcemail.find()) {
            throw new Exception("Email is not valid");
        }
        if (new String(txtPassword.getPassword()).equals("")) {
            throw new Exception("Please enter Password");
        }

        /*Pattern ptEmplNumber = Pattern.compile("^E+[\\d]{4}$");
         Matcher mcEmplNumber = ptEmplNumber.matcher(txtEmployeeNumber.getText());
         if (!mcEmplNumber.find()) {
         throw new Exception("Employee Number is not valid");
         }*/

    }
}
